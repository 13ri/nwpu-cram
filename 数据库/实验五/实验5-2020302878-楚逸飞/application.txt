一、
A:
1.隔离等级不正确会导致每个事务看到不一致的数据。当一个事务更新的时候，其他事务就必须等待先行事务释放当前锁，还有可能使得数据更新丢失。
2.确认信息位置错误。使用户可以在事务结束之前收到确认信息。 由于事务可能会回滚，但用户认为他的事务已成功结束。 所有确认信息必须在事务成功提交后显示。
3.事务边界应该设置为用户提供最大的吞吐量，并且用户每次为一个数据上锁，需要等到事务结束的时候才能够释放锁。
4.在一个事务中等待用户的输入会导致其他用户都在等待这个用户去释放锁，这会导致交易等待相当长的时间。

B.
1.隔离等级不正确，读提交的隔离等级会使得更新丢失。
2.在一个事务中等待用户的输入会导致其他人一直都在等待那个用户去释放锁，这会导致交易等待相当长的时间。

C.
1.在一个事务中等待用户的输入会导致其他人一直都在等待那个用户去释放锁，这会导致交易等待相当长的时间。
2.虽然设置了正确的隔离等级，但是在这种情况下隔离的级别过于严格。在这种情况下，是不可能出现幻读的，所以说适当的隔离等级应该是可重复读取。

D.
		Willian 
ATM prompts user for operation. 
William Chooses Deposit into Savings. 
ATM prompts user for amount. 
William enters 400. 
 
Begin transaction(serializable isolation level) 
Select balance of savings 
savings_balance = saving_balance + $400 
Update savings balance in database. 
End Transaction 
 
ATM displays confirmation fo deposit. 
 ATM propmpts user for operation. 
 William chooses transfer from checking to savings. 
 ATM prompts user for amount. 
 William enters 300. 
 
Begin transaction (serializable isolation level) 
Select the checking balance. 
checking_balance = checking_balance -$300 
Select the savings balance. 
savings_balance = savings_balance +$300 
 
 Update savings balance in database. 
 Update checking balance in database. 
 End Trensaction 
 ATM displays confirmation of transfer. 
 ATM Prompt user for operation. 
 William chooses no more operations. 
 

           	  Julie 
 ATM prompts user for operation. 
 Julie Chooses Deposit into Checking. 
 ATM Prompts user for amount. 
 Julie enters 500. 
   
 Begin transaction (serializable isolation level) 
 Select balance of checking  
 checking_balance = checking_balance + $500  
 Update checking balance in database. 
End Transaction  
 ATM displays confirmation of deposit. 
 ATM prompts user for operation. 
 Julie chooses withdrawal from savings. 
 ATM prompts user for amount. 
 Julie enters 100. 
 
 Begin transaction (serializable isolation level) 
 Select the savings checking balance in database. 
 savings_balance = savings_balance - $100  
 Update savings balance in database.  
 End Transaction  
 
 ATM displays confirmation of withdrawal. 
 ATM Prompt user for operation. 
 Julie chooses no more operations.  

二、
1.对于事务的开始和结束：
代码：
	System.out.println( "Please enter the number of seats that you want to buy: " );
	numseats = Integer.parseInt( keyIn.readLine() );

	// Begin a new, chained, transaction.
	stmt.executeUpdate( "Begin Work" );

	// Set the transaction isolation level to serializable
	stmt.executeUpdate( "set transaction isolation level serializable" );

	// Query the database for the number of available standrd seats.
	sqlquery = new String( "select available_standard_seats from showing where movie_id = " + movie_id );
	rset = stmt.executeQuery( sqlquery );

2.查询必须由事务边界保护，如果查询不受事务边界保护，用户可能会查询到不一样的数据。

3.事务应该在serializable isolation level的隔离等级上运行。如果事务以read committed isolation level运行，那么两个事务可能都会请求超过当前可用的座位数量。
